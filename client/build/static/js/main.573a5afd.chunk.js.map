{"version":3,"sources":["components/dashboard/todolist/InputTodo.js","components/dashboard/todolist/EditTodo.js","components/dashboard/todolist/ListTodo.js","components/dashboard/Dashboard.js","components/Login.js","components/Register.js","components/Landing.js","App.js","index.js"],"names":["InputTodo","setTodosChange","useState","description","setDescription","onSubmitForm","e","a","preventDefault","myHeaders","Headers","append","localStorage","token","body","fetch","method","headers","JSON","stringify","response","json","parseResponse","console","log","error","message","className","onSubmit","type","value","onChange","target","EditTodo","todo","updateDescription","todo_id","id","onClick","ListTodos","allTodos","todos","setTodos","deleteTodo","filter","useEffect","length","map","Dashboard","setAuth","name","setName","setAllTodos","todosChange","getProfile","user_name","removeItem","toast","success","logout","ListTodo","Login","email","password","inputs","setInputs","setItem","placeholder","to","Register","Landing","App","isAuthenticated","setIsAuthenticated","boolean","isAuth","exact","path","render","props","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.573a5afd.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\nconst InputTodo = ({ setTodosChange }) => {\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const myHeaders = new Headers();\n\n      myHeaders.append('Content-Type', 'application/json');\n      myHeaders.append('token', localStorage.token)\n\n      const body = { description };\n      const response = await fetch(\"/dashboard/todos\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n\n      const parseResponse = await response.json();\n      console.log(parseResponse);\n      setTodosChange(true);\n      setDescription('');\n      //window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"text-center mt-5\">Pern Todo List</h1>\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <button className=\"btn btn-success\">Add</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default InputTodo;","import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo, setTodosChange }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  //edit description function\n  const updateDescription = async e => {\n    e.preventDefault();\n    try {\n      const body = { description };\n      const myHeaders = new Headers();\n      myHeaders.append('Content-Type', 'application/json');\n      myHeaders.append('token', localStorage.token);\n\n      //proxy\n      await fetch(\n        `/dashboard/todos/${todo.todo_id}`,\n        {\n          method: \"PUT\",\n          headers: myHeaders,\n          body: JSON.stringify(body)\n        }\n      );\n\n      setTodosChange(true); //cause the useEffect function on Dashboard Component to run and prevent page refresh\n\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        className=\"btn btn-warning\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        Edit\n      </button>\n\n      {/* \n        id = id10\n      */}\n      <div\n        className=\"modal\"\n        id={`id${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Edit Todo</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                data-dismiss=\"modal\"\n                onClick={e => updateDescription(e)}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;","import React, { Fragment, useEffect, useState } from \"react\";\n\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = ({ allTodos, setTodosChange }) => {\n  const [todos, setTodos] = useState([]);\n\n  //delete todo function\n  const deleteTodo = async id => {\n    try {\n      await fetch(`/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: {token: localStorage.token}\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  //prevent page from refreshing\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n\n  console.log(todos);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table className=\"table mt-5 text-center\">\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/*<tr>\n            <td>John</td>\n            <td>Doe</td>\n            <td>john@example.com</td>\n          </tr> */}\n          {todos.length !== 0 && todos[0].todo_id !== null && todos.map(todo => (\n            <tr key={todo.todo_id}>\n              <td>{todo.description}</td>\n              <td>\n                <EditTodo todo={todo} setTodosChange={setTodosChange}/>\n              </td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => deleteTodo(todo.todo_id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListTodos;","import React, { Fragment, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\n//components\nimport InputTodo from './todolist/InputTodo';\nimport ListTodos from './todolist/ListTodo';\n\nconst Dashboard = ({ setAuth }) => {\n    const [name, setName] = useState('');\n    const [allTodos, setAllTodos] = useState([]);\n    const [todosChange, setTodosChange] = useState(false);\n\n    const getProfile = async () => {\n        try {\n            const response = await fetch('/dashboard/', {\n                method: 'GET',\n                headers: { token: localStorage.token }\n            });\n\n            const parseResponse = await response.json();\n            setAllTodos(parseResponse);\n            setName(parseResponse[0].user_name);\n\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const logout = (e) => {\n        e.preventDefault();\n        localStorage.removeItem('token');\n        setAuth(false);\n        toast.success('Logout Successful');\n    };\n\n    //runs the useEffect function to prevent page refresh\n    useEffect(() => {\n        getProfile(); //notices that the state has changed and gets all todos and profile information again\n        setTodosChange(false); //sets Todos state back to false so that when another change happens, it reruns the useEffect function\n    }, [todosChange]);\n\n    return (\n    <Fragment>\n        <div className='d-flex mt-5 justify-content-around'>\n            <h2>{name}'s Todo List</h2>\n            <button \n                className='btn btn-primary'\n                onClick={e => logout(e)}>\n                Logout\n            </button> \n        </div>\n        <InputTodo setTodosChange={setTodosChange}/> \n        <ListTodos allTodos={allTodos} setTodosChange={setTodosChange}/>\n    </Fragment>\n    );\n};\n\nexport default Dashboard;","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Login = ({ setAuth }) => {\n    const [inputs, setInputs] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = inputs;\n\n    const onChange = (e) => {\n        setInputs({ ...inputs, [e.target.name] : e.target.value });\n    };\n\n    const onSubmitForm = async (e) => {\n        e.preventDefault();\n\n        try {\n            const body = { email, password };\n            const response = await fetch('/auth/login', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body)\n            });\n\n            const parseResponse = await response.json();\n            \n            if (parseResponse.token) {\n                localStorage.setItem('token', parseResponse.token);\n\n                setAuth(true);\n                toast.success('Logged In Successfully');\n            } else {\n                setAuth(false);\n                toast.error(parseResponse);\n            }\n            \n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    return (\n        <Fragment>\n            <h1 className='text-center my-5'>Login</h1>\n            <form onSubmit={onSubmitForm}>\n                <input\n                    type='email'\n                    name='email'\n                    placeholder='email'\n                    className='form-control my-3'\n                    value={email}\n                    onChange={e=> onChange(e)}\n                />\n                <input\n                    type='password'\n                    name='password'\n                    placeholder='password'\n                    className='form-control my-3'\n                    value={password}\n                    onChange={e=> onChange(e)}\n                />\n                <button className='btn btn-success btn-block'>Submit</button>\n            </form>\n            <Link to='/register'>Register</Link>\n        </Fragment>\n    );\n};\n\nexport default Login;","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Register = ({ setAuth }) => {\n    const [inputs, setInputs] = useState({\n        email: '',\n        password: '',\n        name: ''\n    })\n\n    const {email, password, name} = inputs;\n\n    const onChange = (e) => {\n        setInputs({...inputs, [e.target.name] : e.target.value});\n    };\n\n    const onSubmitForm = async (e) => {\n        e.preventDefault();\n\n        try {\n            const body = {email, password, name}\n            const response = await fetch('/auth/register', {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n            const parseResponse = await response.json();\n\n            if (parseResponse.token) {\n                localStorage.setItem(\"token\", parseResponse.token);\n\n                setAuth(true);\n                toast.success('Registered Successfully');\n            } else {\n                setAuth(false);\n                toast.error(parseResponse);\n            }\n            \n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    return (\n    <Fragment>\n        <h1 className='text-center my-5'>Register</h1>\n        <form onSubmit={onSubmitForm}>\n            <input \n                type='email' \n                name='email' \n                placeholder='email'\n                className='form-control my-3' \n                value={email}\n                onChange= {e => onChange(e)}\n            />\n            <input \n                type='password' \n                name='password' \n                placeholder='password'\n                className='form-control my-3'\n                value={password}\n                onChange= {e => onChange(e)}  \n            />\n            <input \n                type='text' \n                name='name' \n                placeholder='name'\n                className='form-control my-3'\n                value={name}\n                onChange= {e => onChange(e)}  \n            />\n            <button className='btn btn-success btn-block'>Submit</button>\n        </form>\n        <Link to='/login'>Login</Link>\n    </Fragment>\n    );\n};\n\nexport default Register;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => {\n    return (\n        <div className=\"jumbotron mt-5\">\n            <h1>Welcome to my application</h1>\n            <p>Sign In and start building your todo list.</p>\n            <Link to='/login' className='btn btn-primary ml-3'>Login</Link>\n            <Link to='/register' className='btn btn-primary ml-3'>Register</Link>\n        </div>\n    );\n};\n\nexport default Landing","import React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route, \n  Redirect \n} from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//components\nimport Dashboard from './components/dashboard/Dashboard';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Landing from './components/Landing';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  }\n\n  const isAuth = async () => {\n    try {\n      const response = await fetch('/auth/is-verify', {\n        method: 'GET',\n        headers: { token: localStorage.token }\n      });\n\n      const parseResponse = await response.json();\n\n      parseResponse === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    isAuth()\n  })\n\n  return (\n    <div className=\"App\">\n      <Fragment>\n        <Router>\n          <div className=\"container\">\n            <Switch>\n              <Route \n                exact path=\"/\" \n                render={props => \n                !isAuthenticated ? (\n                  <Landing {...props} />\n                ) : ( \n                  <Redirect to=\"/dashboard\" /> \n                )} \n              />\n              <Route \n                exact path=\"/login\" \n                render={props => \n                !isAuthenticated ? (\n                  <Login {...props} setAuth ={setAuth} />\n                ) : ( \n                  <Redirect to=\"/dashboard\" /> \n                )} \n              />\n              <Route \n                exact path=\"/register\" \n                render={props => \n                  !isAuthenticated ? (\n                    <Register {...props} setAuth ={setAuth} />\n                  ) : ( \n                    <Redirect to=\"/login\" /> \n                  )} \n                />\n              <Route \n                exact path=\"/dashboard\" \n                render={props => \n                  isAuthenticated ? (\n                    <Dashboard {...props} setAuth ={setAuth} />\n                  ) : ( \n                    <Redirect to=\"/login\" /> \n                  )} \n                />\n            </Switch>\n          </div>\n        </Router>\n        <ToastContainer />\n      </Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}