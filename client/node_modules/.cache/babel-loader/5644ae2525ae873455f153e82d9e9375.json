{"ast":null,"code":"var _jsxFileName = \"/Users/trwarren/Projects/pern-jwt-todo/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; //components\n\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  const isAuth = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/auth/is-verify', {\n        method: 'GET',\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseResponse = await response.json();\n      parseResponse === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    isAuth();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/login\",\n              render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, { ...props,\n                setAuth: setAuth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/register\",\n              render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, { ...props,\n                setAuth: setAuth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/dashboard\",\n              render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, { ...props,\n                setAuth: setAuth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/trwarren/Projects/pern-jwt-todo/client/src/App.js"],"names":["React","Fragment","useState","useEffect","BrowserRouter","Router","Switch","Route","Redirect","ToastContainer","Dashboard","Login","Register","App","isAuthenticated","setIsAuthenticated","setAuth","boolean","isAuth","response","fetch","method","headers","token","localStorage","parseResponse","json","err","console","error","message","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route, \n  Redirect \n} from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//components\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  }\n\n  const isAuth = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/auth/is-verify', {\n        method: 'GET',\n        headers: { token: localStorage.token }\n      });\n\n      const parseResponse = await response.json();\n\n      parseResponse === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    isAuth()\n  })\n\n  return (\n    <div className=\"App\">\n      <Fragment>\n        <Router>\n          <div className=\"container\">\n            <Switch>\n              <Route \n                exact path=\"/login\" \n                render={props => \n                !isAuthenticated ? (\n                  <Login {...props} setAuth ={setAuth} />\n                ) : ( \n                  <Redirect to=\"/dashboard\" /> \n                )} \n              />\n              <Route \n                exact path=\"/register\" \n                render={props => \n                  !isAuthenticated ? (\n                    <Register {...props} setAuth ={setAuth} />\n                  ) : ( \n                    <Redirect to=\"/login\" /> \n                  )} \n                />\n              <Route \n                exact path=\"/dashboard\" \n                render={props => \n                  isAuthenticated ? (\n                    <Dashboard {...props} setAuth ={setAuth} />\n                  ) : ( \n                    <Redirect to=\"/login\" /> \n                  )} \n                />\n            </Switch>\n          </div>\n        </Router>\n        <ToastContainer />\n      </Fragment>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}