{"ast":null,"code":"var _jsxFileName = \"/Users/trwarren/Projects/pern-jwt-todo/client/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify'; //components\n\nimport InputTodo from './todolist/InputTodo';\nimport ListTodos from './todolist/ListTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  setAuth\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [allTodos, setAllTodos] = useState([]);\n  const [todosChange, setTodosChange] = useState(false);\n\n  const getProfile = async () => {\n    try {\n      const response = await fetch('/dashboard/', {\n        method: 'GET',\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseResponse = await response.json();\n      setAllTodos(parseResponse);\n      setName(parseResponse[0].user_name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem('token');\n    setAuth(false);\n    toast.success('Logout Successful');\n  }; //runs the useEffect function to prevent page refresh\n\n\n  useEffect(() => {\n    getProfile(); //notices that the state has changed and gets all todos and profile information again\n\n    setTodosChange(false); //sets Todos state back to false so that when another change happens, it reruns the useEffect function\n  }, [todosChange]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mt-5 justify-content-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [name, \"'s Todo List\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: e => logout(e),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputTodo, {\n      setTodosChange: setTodosChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListTodos, {\n      allTodos: allTodos,\n      setTodosChange: setTodosChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"cN/4BHFVb329aH40OaL8pAZk7Ow=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/trwarren/Projects/pern-jwt-todo/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useState","useEffect","toast","InputTodo","ListTodos","Dashboard","setAuth","name","setName","allTodos","setAllTodos","todosChange","setTodosChange","getProfile","response","fetch","method","headers","token","localStorage","parseResponse","json","user_name","err","console","error","message","logout","e","preventDefault","removeItem","success"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMa,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AACxCC,QAAAA,MAAM,EAAE,KADgC;AAExCC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEC,YAAY,CAACD;AAAtB;AAF+B,OAAhB,CAA5B;AAKA,YAAME,aAAa,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA5B;AACAX,MAAAA,WAAW,CAACU,aAAD,CAAX;AACAZ,MAAAA,OAAO,CAACY,aAAa,CAAC,CAAD,CAAb,CAAiBE,SAAlB,CAAP;AAEH,KAVD,CAUE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GAdD;;AAgBA,QAAMC,MAAM,GAAIC,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAxB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAJ,IAAAA,KAAK,CAAC6B,OAAN,CAAc,mBAAd;AACH,GALD,CArB+B,CA4B/B;;;AACA9B,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU,GADE,CACE;;AACdD,IAAAA,cAAc,CAAC,KAAD,CAAd,CAFY,CAEW;AAC1B,GAHQ,EAGN,CAACD,WAAD,CAHM,CAAT;AAKA,sBACA,QAAC,QAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,8BACI;AAAA,mBAAKJ,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,SAAS,EAAC,iBADd;AAEI,QAAA,OAAO,EAAEqB,CAAC,IAAID,MAAM,CAACC,CAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,SAAD;AAAW,MAAA,cAAc,EAAEhB;AAA3B;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEH,QAArB;AAA+B,MAAA,cAAc,EAAEG;AAA/C;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcH,CAhDD;;GAAMP,S;;KAAAA,S;AAkDN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\n//components\nimport InputTodo from './todolist/InputTodo';\nimport ListTodos from './todolist/ListTodo';\n\nconst Dashboard = ({ setAuth }) => {\n    const [name, setName] = useState('');\n    const [allTodos, setAllTodos] = useState([]);\n    const [todosChange, setTodosChange] = useState(false);\n\n    const getProfile = async () => {\n        try {\n            const response = await fetch('/dashboard/', {\n                method: 'GET',\n                headers: { token: localStorage.token }\n            });\n\n            const parseResponse = await response.json();\n            setAllTodos(parseResponse);\n            setName(parseResponse[0].user_name);\n\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const logout = (e) => {\n        e.preventDefault();\n        localStorage.removeItem('token');\n        setAuth(false);\n        toast.success('Logout Successful');\n    };\n\n    //runs the useEffect function to prevent page refresh\n    useEffect(() => {\n        getProfile(); //notices that the state has changed and gets all todos and profile information again\n        setTodosChange(false); //sets Todos state back to false so that when another change happens, it reruns the useEffect function\n    }, [todosChange]);\n\n    return (\n    <Fragment>\n        <div className='d-flex mt-5 justify-content-around'>\n            <h2>{name}'s Todo List</h2>\n            <button \n                className='btn btn-primary'\n                onClick={e => logout(e)}>\n                Logout\n            </button> \n        </div>\n        <InputTodo setTodosChange={setTodosChange}/> \n        <ListTodos allTodos={allTodos} setTodosChange={setTodosChange}/>\n    </Fragment>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}