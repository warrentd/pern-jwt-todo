{"ast":null,"code":"var _jsxFileName = \"/Users/trwarren/Projects/pern-jwt-todo/client/src/components/dashboard/todolist/ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport EditTodo from \"./EditTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTodos = ({\n  allTodos,\n  setTodosChange\n}) => {\n  _s();\n\n  const [todos, setTodos] = useState([]); //delete todo function\n\n  const deleteTodo = async id => {\n    try {\n      await fetch(`/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //prevent page from refreshing\n\n\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.length !== 0 && todos[0].todo_id !== null && todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTodo, {\n              todo: todo,\n              setTodosChange: setTodosChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTodos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = ListTodos;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["/Users/trwarren/Projects/pern-jwt-todo/client/src/components/dashboard/todolist/ListTodo.js"],"names":["React","Fragment","useEffect","useState","EditTodo","ListTodos","allTodos","setTodosChange","todos","setTodos","deleteTodo","id","fetch","method","headers","token","localStorage","filter","todo","todo_id","err","console","error","message","log","length","map","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAkC;AAAA;;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADkD,CAGlD;;AACA,QAAMO,UAAU,GAAG,MAAMC,EAAN,IAAY;AAC7B,QAAI;AACF,YAAMC,KAAK,CAAE,oBAAmBD,EAAG,EAAxB,EAA2B;AACpCE,QAAAA,MAAM,EAAE,QAD4B;AAEpCC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEC,YAAY,CAACD;AAArB;AAF2B,OAA3B,CAAX;AAKAN,MAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBR,EAAtC,CAAD,CAAR;AACD,KAPD,CAOE,OAAOS,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GAXD,CAJkD,CAiBlD;;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACH,QAAD,CAAR;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAe,EAAAA,OAAO,CAACG,GAAR,CAAYhB,KAAZ;AAEA,sBACE,QAAC,QAAD;AAAA,eACG,GADH,eAEE;AAAO,MAAA,SAAS,EAAC,wBAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBAMGA,KAAK,CAACiB,MAAN,KAAiB,CAAjB,IAAsBjB,KAAK,CAAC,CAAD,CAAL,CAASW,OAAT,KAAqB,IAA3C,IAAmDX,KAAK,CAACkB,GAAN,CAAUR,IAAI,iBAChE;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAET,IAAhB;AAAsB,cAAA,cAAc,EAAEX;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,OAAO,EAAE,MAAMG,UAAU,CAACQ,IAAI,CAACC,OAAN,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAASD,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA,gBADkD;AANtD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA7DD;;GAAMd,S;;KAAAA,S;AA+DN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = ({ allTodos, setTodosChange }) => {\n  const [todos, setTodos] = useState([]);\n\n  //delete todo function\n  const deleteTodo = async id => {\n    try {\n      await fetch(`/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: {token: localStorage.token}\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  //prevent page from refreshing\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n\n  console.log(todos);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table className=\"table mt-5 text-center\">\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/*<tr>\n            <td>John</td>\n            <td>Doe</td>\n            <td>john@example.com</td>\n          </tr> */}\n          {todos.length !== 0 && todos[0].todo_id !== null && todos.map(todo => (\n            <tr key={todo.todo_id}>\n              <td>{todo.description}</td>\n              <td>\n                <EditTodo todo={todo} setTodosChange={setTodosChange}/>\n              </td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => deleteTodo(todo.todo_id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListTodos;"]},"metadata":{},"sourceType":"module"}